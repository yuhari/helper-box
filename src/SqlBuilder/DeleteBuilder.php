<?php
/**
 *
 * The content is generated by using TextMate, and edited by yuhari.
 *
 *
 * delete sql builder 
 *
 *
 * @author 	   yuhari
 * @maintainer yuhari
 * @version    1.0.0
 * @modified   2018/07/25 18:20:54
 *
 */
namespace box\SqlBuilder ;

class DeleteBuilder extends AbstractBuilder {
	
	// delete rows in tables' `fields`
	protected $fields = '' ;
	
	/**
	 * build delete sql clause .
	 *
	 * @param  default
	 * @return string
	 */
	public function getSqlString() {
		$clause = 'DELETE ' 
			. $this->buildSelect() 
			. $this->buildTables() 
			. $this->buildWhere() ;
		
		return $clause ;
	}
	
	/**
	 * reset sql
	 *
	 * @param  default
	 * @return $this
	 */
	public function reset() {
		$this->from = array() ;
		$this->from_key = -1 ;
		$this->where = array() ;
		$this->bind_values = array() ;
		$this->alias = null ;
		
		return $this ;
	}
	
	/**
	 * add a delete specific table clause.
	 *
	 * @param  array | string $spec
	 * @return $this
	 */
	public function select($spec) {
		if (is_array($spec)) {
			$this->fields = implode(',', $spec) ;
		}else{
			$this->fields = trim($spec) ;
		}
		
		return $this ;
	}
	
	/**
	 * build a specific table string.
	 *
	 * @param  default
	 * @return string
	 */
	public function buildSelect() {
		return empty($this->fields) ? '' : $this->fields . " " ;
	}
}
